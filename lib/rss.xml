<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Documentation]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>Documentation</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Mon, 27 Jan 2025 20:11:11 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Mon, 27 Jan 2025 20:11:10 GMT</pubDate><copyright><![CDATA[Litruv]]></copyright><ttl>60</ttl><dc:creator>Litruv</dc:creator><item><title><![CDATA[lit.ruv.wtf - Blueprint Penetration Trace Documentation]]></title><description><![CDATA[ 
 <br>This is a Blueprint Function Library with a few functions that are callable in AActors to do depth trace results, for use in things like projectiles and tools.<br><br><br>
<br>Depth-based trace
<br>Forward and backward trace results for bullet holes
<br>Simple to implement into existing systems
<br>Easy debug options
<br><br><br>This node works by simulating depth using two line traces—one forward and one backward from the point of impact. These traces scan for objects in their paths and gather information about the hit results. The distance travelled through each material is multiplied by its density (defined in the material's physical properties), which determines how much the projectile is slowed down or whether it stops entirely. Finally, the node returns a list of hit results, including the total depth.<br><br>Depth Trace by Channel<br>
<img alt="DepthTraceByChannel.png" src="images/depthtracebychannel.png"><br>
Depth Trace for Objects<br>
<img alt="DepthTraceForObjects.png" src="images/depthtraceforobjects.png"><br>
Depth Trace by Profile<br>
<img alt="DepthTraceByProfile.png" src="images/depthtracebyprofile.png"><br><br><br><br>This can be seamlessly integrated with existing systems with minimal changes to your current blueprint setup.<br>By simply replacing your current line trace nodes with the Depth Trace node, you’ll get the added benefit of depth effects.<br><br>While adding a custom collision channel is optional, it can be a bit more time-consuming and may cause other systems in your project to break if not set up correctly. By default, your existing channels might not be set to overlap, so setting up a new custom trace channel helps ensure compatibility.<br>To set up a custom trace channel in Unreal Engine, follow these steps:<br>
<br>Go to Project Settings → Engine → Collision.
<br>In the Collision Channels section, click Add New.
<br>Set the following properties for the new channel:

<br>Name: Projectile (or a name of your choice)
<br>Default Response: Overlap


<br>For more detailed instructions on adding a custom object type to your project, you can refer to the <a data-tooltip-position="top" aria-label="https://dev.epicgames.com/documentation/en-us/unreal-engine/add-a-custom-object-type-to-your-project-in-unreal-engine" rel="noopener nofollow" class="external-link" href="https://dev.epicgames.com/documentation/en-us/unreal-engine/add-a-custom-object-type-to-your-project-in-unreal-engine" target="_blank">Unreal Engine Wiki on Custom Object Types</a>.<br><br>Default <a data-tooltip-position="top" aria-label="https://dev.epicgames.com/documentation/en-us/unreal-engine/physical-materials-user-guide-for-unreal-engine" rel="noopener nofollow" class="external-link" href="https://dev.epicgames.com/documentation/en-us/unreal-engine/physical-materials-user-guide-for-unreal-engine" target="_blank">Physical Material</a> properties are at 1 g/cm, but adding more physical properties into your game can add extra depth. <br><br><br><br><br>
<br><a data-tooltip-position="top" aria-label="https://opengameart.org/users/loafbrr1" rel="noopener nofollow" class="external-link" href="https://opengameart.org/users/loafbrr1" target="_blank">loafbrr_1</a> for the pistol model
<br><a data-tooltip-position="top" aria-label="https://commons.wikimedia.org/wiki/File:B1_full_size_1500_target.jpg" rel="noopener nofollow" class="external-link" href="https://commons.wikimedia.org/wiki/File:B1_full_size_1500_target.jpg" target="_blank">Neil Francis</a> for the target image
]]></description><link>blueprint-penetration-trace.html</link><guid isPermaLink="false">Blueprint Penetration Trace.md</guid><dc:creator><![CDATA[Litruv]]></dc:creator><pubDate>Mon, 27 Jan 2025 20:10:17 GMT</pubDate><enclosure url="images/depthtracebychannel.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="images/depthtracebychannel.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[lit.ruv.wtf - Documentation]]></title><description><![CDATA[ 
 <br>Welcome to the docs, I make blueprint plugins, many are in the works, but they'll come out here as I go<br><br><br>If you require more support, come say hi on my <a data-tooltip-position="top" aria-label="https://discord.gg/b8ctQBaaax" rel="noopener nofollow" class="external-link" href="https://discord.gg/b8ctQBaaax" target="_blank">discord</a>. <a rel="noopener nofollow" class="external-link" href="https://discord.gg/b8ctQBaaax" target="_blank">https://discord.gg/b8ctQBaaax</a>]]></description><link>index.html</link><guid isPermaLink="false">index.md</guid><dc:creator><![CDATA[Litruv]]></dc:creator><pubDate>Mon, 27 Jan 2025 20:09:48 GMT</pubDate></item></channel></rss>